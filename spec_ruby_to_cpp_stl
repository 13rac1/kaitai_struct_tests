#!/usr/bin/env ruby

s = $stdin.read

raise "Unable to detect source name" unless s =~ /require ['"](.*?)['"]/
src_name = $1

raise "Unable to detect binary file name" unless s =~ /r = .*\.from_file\(['"](.*?)['"]\)/
bin_name = $1

s.gsub!(/^.*it .parses test properly. do\n/m, '')
s.gsub!(/^ *r = .*\.from_file\(.*\n\n/, '')

s.gsub!(/^( +)/) { $1 * 2 }
s.gsub!(/^    /, '')
s.gsub!(/expect\((.*?)\)/) {
  ex = $1
  c = ex.split(/\./)
  first = c.shift
  c.map! { |x| "#{x}()" }
  c.unshift(first)
  ex = c.join('->')
  "BOOST_CHECK_EQUAL(#{ex})"
}
s.gsub!(/\)\.to eq ?\(?(.*?)\)?$/) { ", #{$1});" }
s.gsub!(/'/, '"')
s.gsub!(/^\s*end\n/, '')

puts <<__EOF__
#include <boost/test/unit_test.hpp>

#include <#{src_name}.h>

#include <iostream>
#include <fstream>
#include <vector>

BOOST_AUTO_TEST_CASE(test_#{src_name}) {
    std::ifstream ifs("#{bin_name}", std::ifstream::binary);
    kaitai::kstream ks(&ifs);
    #{src_name}_t* r = new #{src_name}_t(&ks);

__EOF__

print s

puts
puts "    delete r;"
puts "}"
