#!/bin/sh -e

. ./config

CSHARP_TEST_FORMATS_DIR=$FORMATS_COMPILED_DIR/csharp
CSHARP_SPEC_DIR=spec/csharp
CSHARP_TEST_OUT_DIR="$TEST_OUT_DIR"/csharp

rm -rf "$CSHARP_TEST_OUT_DIR"
mkdir -p "$CSHARP_TEST_OUT_DIR"

# Try and build the project first - if there's no compile errors, we can continue straight away
echo "run-csharp: building project"
xbuild "$CSHARP_SPEC_DIR/kaitai_struct_csharp_tests.sln" >> "$CSHARP_TEST_OUT_DIR/_compile.log" || {

    # Some formats failed to build - find the failing files and erase them
	echo "run-csharp: some formats failed to compile, checking each file individually"
    
    # Find the invalid files and wipe them - we do this by scanning the error list from the compiler
    mcs \
        -t:library \
        -fullpaths \
        -o:$CSHARP_TEST_OUT_DIR/_cs_compile_temp.dll \
        -r:"$CSHARP_SPEC_DIR/packages/NUnit.3.4.1/lib/net45/nunit.framework.dll" \
        "$CSHARP_RUNTIME_DIR/*.cs" \
        "$CSHARP_SPEC_DIR/kaitai_struct_csharp_tests/CommonSpec.cs" \
        "$CSHARP_TEST_FORMATS_DIR"/*.cs \
            2>&1 >> "$CSHARP_TEST_OUT_DIR/_compile.log" | \
            while read -r line ; do
                # e.g. path/to/file.cs(1): Unexpected symbol
                # Grab everything before the first '(' character
                FILENAME=$(echo $line | cut -d '(' -f 1)
                if [ -s $FILENAME ]
                then
                    NAME=$(basename "$FILENAME")
                    echo "$NAME failed to compile, removing"
                    > $FILENAME
                fi
            done
    
	echo "run-csharp: removing tests that are no longer valid"
    
    # Now that the invalid spec classes are gone, we need to remove the matching test cases
    mcs \
        -t:library \
        -fullpaths \
        -o:$CSHARP_TEST_OUT_DIR/_cs_compile_temp.dll \
        -r:"$CSHARP_SPEC_DIR/packages/NUnit.3.4.1/lib/net45/nunit.framework.dll" \
        "$CSHARP_RUNTIME_DIR/*.cs" \
        "$CSHARP_SPEC_DIR/kaitai_struct_csharp_tests/CommonSpec.cs" \
        "$CSHARP_TEST_FORMATS_DIR"/*.cs \
        "$CSHARP_SPEC_DIR/kaitai_struct_csharp_tests/tests/*.cs" \
            2>&1 >> "$CSHARP_TEST_OUT_DIR/_compile.log" | \
            while read -r line ; do
                # e.g. path/to/file.cs(1): Unexpected symbol
                # Grab everything before the first '(' character
                FILENAME=$(echo $line | cut -d '(' -f 1)
                if [ -s $FILENAME ]
                then
                    NAME=$(basename "$FILENAME")
                    echo "The $NAME test was removed as there was no matching spec"
                    > $FILENAME
                fi
            done
    
    # Invalid tests should all be gone - rebuild the project
    echo "run-csharp: rebuilding project"
    xbuild "$CSHARP_SPEC_DIR/kaitai_struct_csharp_tests.sln" >> "$CSHARP_TEST_OUT_DIR/_compile.log"
}

# Actually run the tests
mkdir -p "$TEST_OUT_DIR/csharp"
mono \
	"$CSHARP_SPEC_DIR/packages/NUnit.ConsoleRunner.3.4.1/tools/nunit3-console.exe" \
	--result="$TEST_OUT_DIR/csharp/TestResult.xml" \
	"$CSHARP_SPEC_DIR/kaitai_struct_csharp_tests/bin/Debug/kaitai_struct_csharp_tests.dll"
